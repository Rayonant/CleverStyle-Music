// Generated by CoffeeScript 1.4.0

/**
 * @package     CleverStyle Music
 * @category    app
 * @author      Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright   Copyright (c) 2014, Nazar Mokrynskyi
 * @license     MIT License, see license.txt
*/


(function() {
  var music_settings;

  music_settings = cs.music_settings;

  cs.music_equalizer = (function() {
    var frequencies_to_control, frequencies_types, gain_levels;
    frequencies_to_control = [32, 64, 125, 250, 500, 1000, 2000, 4000, 8000, 16000];
    frequencies_types = ['lowshelf', 'lowshelf', 'lowshelf', 'peaking', 'peaking', 'peaking', 'peaking', 'highshelf', 'highshelf', 'highshelf'];
    gain_levels = music_settings.equalizer_gain_levels || [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    return {
      add_to_element: function(element) {
        var audioContext, audioSource, frequencies, frequency, index, _i, _len, _results;
        audioContext = new AudioContext;
        audioContext.mozAudioChannelType = 'content';
        audioSource = audioContext.createMediaElementSource(element);
        frequencies = [];
        _results = [];
        for (index = _i = 0, _len = frequencies_to_control.length; _i < _len; index = ++_i) {
          frequency = frequencies_to_control[index];
          frequencies[index] = audioContext.createBiquadFilter();
          frequencies[index].frequency.value = frequency;
          frequencies[index].type = frequencies_types[index];
          frequencies[index].gain.value = gain_levels[index];
          frequencies[index].Q.value = 1;
          if (index === 0) {
            if (element.equalizer_audio_source) {
              element.equalizer_audio_source.disconnect();
            }
            element.equalizer_audio_source = audioSource;
            _results.push(audioSource.connect(frequencies[index]));
          } else {
            frequencies[index - 1].connect(frequencies[index]);
            if (index === frequencies_to_control.length - 1) {
              _results.push(frequencies[index].connect(audioContext.destination));
            } else {
              _results.push(void 0);
            }
          }
        }
        return _results;
      },
      set_gain_levels: function(new_gain_levels) {
        gain_levels = new_gain_levels;
        music_settings.equalizer_gain_levels = new_gain_levels;
        return cs.bus.trigger('equalizer/update');
      }
    };
  })();

}).call(this);
